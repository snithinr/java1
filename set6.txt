Set 6 :

1.	Write a java program to understand the usage of  an array of integers and find the sum and average of the elements of that array .

Sample Answer :

package com.cvr.labprograms;

public class ArraySumAndAverage {
    public static void main(String[] args) {
        int[] numbers = {5, 10, 15, 20, 25};
        int sum = 0;

        for (int i = 0; i < numbers.length; i++) {
            sum += numbers[i];
        }

        double average = (double) sum / numbers.length;

        System.out.println("Sum: " + sum);
        System.out.println("Average: " + average);
    }
}


2.	Write a java program to synchronize threads. Use Producer â€“ Consumer problem to illustrate  the concept.
Sample Answer :
package com.cvr.labprograms;

public class ProducerConsumerExample {
    public static void main(String[] args) {
        Queue buffer = new Queue();
        Thread producerThread = new Thread(new Producer(buffer));
        Thread consumerThread = new Thread(new Consumer(buffer));
        producerThread.start();
        consumerThread.start();
    }

    static class Queue {
        private int value;
        private boolean available = false;

        public synchronized void put(int value) {
            while (available) {
                try {
                    wait();
                } catch (InterruptedException e) {}
            }
            this.value = value;
            available = true;
            notifyAll();
        }

        public synchronized int get() {
            while (!available) {
                try {
                    wait();
                } catch (InterruptedException e) {}
            }
            available = false;
            notifyAll();
            return value;
        }
    }

    static class Producer implements Runnable {
        private Queue buffer;

        Producer(Queue buffer) {
            this.buffer = buffer;
        }

        @Override
        public void run() {
            int i = 0;
            while (true) {
            	System.out.println("Produced: " + i);
                buffer.put(i++);
                
            }
        }
    }

    static class Consumer implements Runnable {
        private Queue buffer;

        Consumer(Queue buffer) {
            this.buffer = buffer;
        }

        @Override
        public void run() {
            while (true) {
                int value = buffer.get();
                System.out.println("Consumed: " + value);
            }
        }
    }
}
